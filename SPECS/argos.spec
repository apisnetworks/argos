# rpmrebuild autogenerated specfile

%define defaultbuildroot /
AutoProv: no
%undefine __find_provides
AutoReq: no
%undefine __find_requires
# Do not try autogenerate prereq/conflicts/obsoletes and check files
%undefine __check_files
%undefine __find_prereq
%undefine __find_conflicts
%undefine __find_obsoletes
# Be sure buildpolicy set to do nothing
%define __spec_install_post %{nil}
# Something that need for rpm-4.1
%define _missing_doc_files_terminate_build 0
#dummy
#dummy
#BUILDHOST:    rocky-test.apisnetworks.com
#BUILDTIME:    Fri Sep 30 00:50:18 2022
#SOURCERPM:    argos-1.0-19.1.apnscp.src.rpm

#RPMVERSION:   4.14.3

#INSTALLTIME:  Fri Sep 30 00:50:31 2022
#INSTPREFIXES: /
#OS:           linux
#SIZE:           7565
#ARCHIVESIZE:           11380
#ARCH:         noarch
BuildArch:     noarch
Name:          argos
Version:       1.0
Release:       23.1.apnscp
License:       Proprietary
Group:         default
Summary:       Service monitoring engine for ApisCP


URL:           https://apisnetworks.com
Vendor:        root@dolly.apisnetworks.com
Packager:      <build@apisnetworks.com>
Epoch:         1


Prefix:        /
Provides:      argos = 1:1.1-1.apnscp
Requires(post): /bin/sh
Requires(post): /bin/sh
Requires(postun): /bin/sh
Requires(postun): /bin/sh
Requires:      monit
Requires:      python2-pip
#Requires:      rpmlib(CompressedFileNames) <= 3.0.4-1
#Requires:      rpmlib(FileDigests) <= 4.6.0-1
#Requires:      rpmlib(PayloadFilesHavePrefix) <= 4.0-1
#Requires:      rpmlib(PayloadIsXz) <= 5.2-1


%prep
cd %{_topdir}/BUILD
rm -rf %{name}-%{version}
mkdir %{name}-%{version}
pushd %{name}-%{version}
mkdir -p etc/monit.d
cp -af %{_sourcedir}/config/ etc/monit.d

%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT
install -D -m0644 --target-directory=$RPM_BUILD_ROOT/var/www/html/ %{_sourcedir}/monit.html
install -D -m0600 --target-directory=$RPM_BUILD_ROOT/root/ %{_sourcedir}/helpers/.mailfilter
install -D -m0755 --target-directory=$RPM_BUILD_ROOT/root/ %{_sourcedir}/helpers/notify.rb
install -d -m0700 $RPM_BUILD_ROOT/etc/monit.d
install -d -m0700 $RPM_BUILD_ROOT/var/spool/monit
cp -auR %{_sourcedir}/config/* $RPM_BUILD_ROOT/etc/monit.d

%description
Service monitoring engine for ApisCP

%files
%config(noreplace) %attr(0600, root, root) "/etc/monit.d/00-argos.conf"
%attr(0644, root, root) "/etc/monit.d/apache.conf"
%attr(0644, root, root) "/etc/monit.d/apnscp.conf"
%attr(0644, root, root) "/etc/monit.d/authlib.conf"
%attr(0755, root, root) "/etc/monit.d/bins/mysqlcheck.sh"
%attr(0755, root, root) "/etc/monit.d/bins/mysqlkill.sh"
%attr(0644, root, root) "/etc/monit.d/clamd.conf"
%attr(0644, root, root) "/etc/monit.d/dovecot.conf"
%attr(0644, root, root) "/etc/monit.d/fail2ban.conf"
%attr(0644, root, root) "/etc/monit.d/filesystem-home.conf"
%attr(0644, root, root) "/etc/monit.d/filesystem.conf"
%attr(0644, root, root) "/etc/monit.d/firewalld.conf"
%attr(0644, root, root) "/etc/monit.d/haproxy.conf"
%attr(0600, root, root) "/etc/monit.d/mysql.conf"
%attr(0644, root, root) "/etc/monit.d/mysqlconn.conf"
%attr(0644, root, root) "/etc/monit.d/network.conf"
%attr(0644, root, root) "/etc/monit.d/physical.conf"
%attr(0644, root, root) "/etc/monit.d/postfix.conf"
%attr(0644, root, root) "/etc/monit.d/postgres.conf"
%attr(0644, root, root) "/etc/monit.d/rspamd.conf"
%attr(0644, root, root) "/etc/monit.d/spamassassin.conf"
%attr(0644, root, root) "/etc/monit.d/systemd-resolved.conf"
%attr(0644, root, root) "/etc/monit.d/vsftpd.conf"
%config(noreplace) %attr(0600, root, root) "/root/.mailfilter"
%attr(0755, root, root) "/root/notify.rb"
%dir %attr(0600, root, root) "/var/spool/monit"
%attr(0644, root, root) "/var/www/html/monit.html"

%post -p /bin/sh
#!/bin/sh
NTFY_VERSION=2.6.0
PIPBIN=/usr/bin/pip
[[ ! -f $PIPBIN ]] && PIPBIN=/usr/bin/pip3
useradd -s /bin/false -r monit -c "Argos monitoring agent" -M -d /dev/null 2> /dev/null || true
grep -q "mailserver" /etc/monit.d/00-argos.conf
R1=$?
grep -q "monit" /etc/passwd
R2=$?
if [[ $R1 -ne 0 || $R2 -ne 0 ]]; then
  sed -i -e 's!^.*username monit password.*$!!g' /etc/monit.d/00-argos.conf
  PASSWORD=x$(openssl rand -base64 32)
  echo $PASSWORD | passwd --stdin monit
  echo "set mailserver localhost username monit password \"$PASSWORD\"" >> /etc/monit.d/00-argos.conf
  test ! `grep -q monit /etc/smtp.pamlist` && echo monit >> /etc/smtp.pamlist
fi
# Prefer .conf to avoid obliterating or duplicate loading .rpmsave configs
grep -q "^\s*include /etc/monit\.d/\*$" /etc/monitrc
[[ $? -eq 0 ]] && sed -i -e 's!^\s*include /etc/monit\.d/\*$!!g' /etc/monitrc
grep -q "^\s*include /etc/monit\.d/\*\.conf$" /etc/monitrc
[[ $? -ne 0 ]] && echo -e "\ninclude /etc/monit.d/*.conf" >> /etc/monitrc

read -r -d '' BLOCK <<'EOF'
### BEGIN ARGOS BLOCK ###
if (/From: monit@localhost/)
{
        cc "|ruby $HOME/notify.rb"
        to $DEFAULT
}
### END ARGOS BLOCK ###
EOF

grep -q 'notify.rb' /root/.mailfilter

if test $? -ne 0 ; then
	echo "$BLOCK" >> /root/.mailfilter
fi

# no -q, pip doesn't handle SIGPIPE
$PIPBIN show ntfy | grep -F $NTFY_VERSION > /dev/null
if test $? -ne 0 ; then
	$PIPBIN install -U ntfy==$NTFY_VERSION
fi

# Ensure password is always restricted
[[ -f /etc/monit.d/00-argos.conf ]] && chmod 600 /etc/monit.d/00-argos.conf
for i in /etc/monit.d/*.conf ; do
  [[ -f $i.disabled ]] && mv $i $i.disabled
done

/usr/bin/systemctl try-restart monit



%postun -p /bin/sh
#!/bin/sh
if [[ $1 -eq 0 ]]; then
  userdel monit 2> /dev/null || true
fi

%changelog
* Thu Feb 13 2025 Matt Saladna <matt@apisnetworks.com> - 1.0-23.apnscp
- Set network dependencies

* Sun Jan 19 2025 Matt Saladna <matt@apisnetworks.com> - 1.0-21.apnscp
- Add firewall-cmd --reload resuscitation on overlapping entries

* Thu Sep 29 2022 Matt Saladna <matt@apisnetworks.com> - 1.0-19.apnscp
- Add systemd-resolved

* Sat Oct 02 2021 Matt Saladna <matt@apisnetworks.com> - 1.0-18.apnscp
- Add ClamAV monitoring profile

* Fri Nov 27 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-17.apnscp
- Typo in haproxy service restart

* Thu Oct 08 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-16.apnscp
- firewalld support

* Tue Sep 22 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-15.apnscp
- MariaDB 10.5 support

* Sun Sep 13 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-14.apnscp
- /home monitoring

* Tue Aug 25 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-13.apnscp
- haproxy monitoring

* Fri May 01 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-12.apnscp
- Switch Postgres to TCP monitoring

* Thu Apr 16 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-11.apnscp
- Add fail2ban monitoring

* Wed Mar 11 2020 Matt Saladna <matt@apisnetworks.com> - 1.0-10.apnscp
- Add rspamd monitoring

* Thu Jun 13 2019 Matt Saladna <matt@apisnetworks.com> - 1.0-9.apnscp
- Default action on MySQL failure to restart

* Sun May 12 2019 Matt Saladna <matt@apisnetworks.com> - 1.0-8.apnscp
- Specify apnscp restart program

* Sat Apr 27 2019 Matt Saladna <matt@apisnetworks.com> - 1.0-7.apnscp
- apnscpd protocol check
- Use hostname for physical check
- Restrict 00-argos.conf access

* Sun Mar 03 2019 Matt Saladna <matt@apisnetworks.com> - 1.0-6.apnscp
- Use environment ruby

* Thu Nov 15 2018 Matt Saladna <matt@apisnetworks.com> - 1.0-5.apnscp
- Remove "default" backend, restrict high backend to mysql

* Mon Nov 05 2018 Matt Saladna <matt@apisnetworks.com> - 1.0-4.apnscp
- Permit user-defined priority settings

* Wed Sep 19 2018 Matt Saladna <matt@apisnetworks.com> - 1.0-3.apnscp
- Use ntfy for notifications

* Thu Aug 30 2018 Matt Saladna <matt@apisnetworks.com> - 1.0-2.apnscp
- Lenient of false positives, apache
- Set MySQL connection timeout

* Wed Jun 20 2018 Matt Saladna <matt@apisnetworks.com> - 1.0-1.apnscp
- Rename argos configuration to .conf
